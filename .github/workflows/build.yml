name: Build

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      ORG_GRADLE_PROJECT_RAM_RELEASE_KEYSTORE_PWD: ${{ secrets.ORG_GRADLE_PROJECT_RAM_RELEASE_KEYSTORE_PWD }}
      ORG_GRADLE_PROJECT_RAM_RELEASE_KEY_PWD: ${{ secrets.ORG_GRADLE_PROJECT_RAM_RELEASE_KEY_PWD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          lfs: true

      - name: Check LFS files
        uses: actionsdesk/lfs-warning@v3.3

      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          distribution: "zulu"
          java-version-file: .github/.java-version

      - name: Set up jemalloc
        uses: kaeawc/setup-jemalloc@v0.0.3

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: Decrypt secrets
        uses: ./.github/actions/decrypt-secrets
        with:
          key: ${{ secrets.DECRYPT_KEY }}

      - name: Run checks
        run: ./gradlew check

      - name: Detect unused and misused dependencies
        run: ./gradlew buildHealth

      - name: Build all build type and flavor permutations
        run: |
          ./gradlew assemble \
          -x :baseline-profile:pixel6Api31AospSetup \
          -Pandroidx.baselineprofile.skipgeneration

      - name: Upload build outputs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: build-outputs
          path: |
            app/build/outputs

      - name: Upload reports
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            build/reports/dependency-analysis/build-health-report.txt
            **/build/reports/lint-results-*.html
            **/build/reports/screenshotTest/*

      - name: Upload test results
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            **/build/test-results/*

      - name: Clean secrets
        if: always()
        uses: ./.github/actions/clean-secrets

  android-test-cfg:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Set matrix
        id: set-matrix
        run: |
          MATRIX='
            {"device": "pixel4", "api-level": "30", "system-image-source": "aospatd"},
            {"device": "pixel6", "api-level": "31", "system-image-source": "aosp"},
            {"device": "pixelc", "api-level": "30", "system-image-source": "aospatd"}
          '
          echo "matrix={\"include\":[${MATRIX//$'\n'/}]}" >> $GITHUB_OUTPUT

  android-test-cfg-check:
    needs: android-test-cfg
    runs-on: ubuntu-latest

    steps:
      - name: Check matrix configuration
        run: |
          matrix='${{ needs.android-test-cfg.outputs.matrix }}'
          echo $matrix
          echo $matrix | jq .

  android-test:
    needs: android-test-cfg
    runs-on: ubuntu-latest
    timeout-minutes: 120

    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.android-test-cfg.outputs.matrix) }}

    steps:
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          ls /dev/kvm

      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          distribution: "zulu"
          java-version-file: .github/.java-version

      - name: Set up jemalloc
        uses: kaeawc/setup-jemalloc@v0.0.3

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: Accept license
        run: echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_SDK_ROOT/licenses/android-sdk-preview-license"

      - name: Cache AVD
        uses: actions/cache@v4
        with:
          path: |
            ~/.android/avd/*
          key: ${{ runner.os }}-gmd-${{ matrix.device }}-${{ matrix.api-level }}-${{ matrix.system-image-source }}

      - name: Run instrumentation tests
        run: |
          ./gradlew ${{ matrix.device }}api${{ matrix.api-level }}${{ matrix.system-image-source }}DebugAndroidTest \
          -Pandroid.testoptions.manageddevices.emulator.gpu=swiftshader_indirect \
          --no-parallel \
          -Dorg.gradle.workers.max=1

      - name: Upload test results
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.device }}-${{ matrix.api-level }}-${{ matrix.system-image-source }}
          path: |
            **/build/reports/*
            **/build/outputs/*/connected/*
            **/out/failures/
